// -----------------------------------------------------------
// macros
macro NEXT()
    mov %wp, [%ip++]
    jmp %wp
end

macro __DEFCODE_CFA()
end

macro __DEFASM_COLON_CFA()
    call :dolist_cfa
end

macro __DEFCOLON_CFA()
    call :dolist_cfa
end

macro __DEFVARIABLE_CFA()
    dw :dovar_cfa
end

macro __DEFUSERVAR_CFA()
    dw :douser_cfa
end

macro USER_OFFSET(bla)
    dw @bla - :uzero
end

macro COUNTED_WORD(s)
    db :'string_end - :'string_start
'string_start:
    db @s
'string_end:
end

// -----------------------------------------------------------
// constants

const COMPO = 0x40
const MASKK = 0x7f1f
const LENMASK = 0x1f

const BASEE = 10        // default radix

const BKSPP = 8
const LF = 10
const CRR = 13
const ERR = 27

const LF = 10
const CRR = 13
const ERR = 27

    // Setup the memory layout
    // +------------+------------+--------------+----------------+-------------+
    // | Dictionary |                           | User Variables | I/O Buffers |
    // +------------+------------+--------------+----------------+-------------+
    //  16k           4k           4k             4k               4k
    //   -->

const TIBB = 0x3000         // terminal input buffer (TIB)

// flags
const COMPILE_ONLY = 0x40
const IMMEDIATE = 0x80

// -----------------------------------------------------------
// startup code

codeblock
    mov %acc1, :start_word
    mov %ip, %acc1
    NEXT()

uzero:
u_sp0:
    dw #0           // SP0
u_rp0:
    dw #0           // RP0
u_qkey:
    dw :qrx_cfa     // '?KEY
u_temit:
    dw :txsto_cfa   // 'EMIT
u_texpect:
    dw :accept_cfa  // 'EXPECT
u_ttap:
    dw :ktap_cfa    // 'TAP
u_techo:
    dw :txsto_cfa   // 'ECHO
u_tprompt:
    dw #0           // 'PROMPT !TODO!
u_base:
    dw BASEE        // BASE
u_temp:
    dw #0           // tmp
u_span:
    dw #0           // SPAN
u_toin:
    dw #0           // >IN
u_htib:
    dw #0           // #TIB
    dw TIBB			// TIB
u_csp:
    dw #0           // CSP
u_teval:
    dw #0           // 'EVAL !TODO!
u_tnumber:
    dw #0           // 'NUMBER !TODO!
u_hld:
    dw #0           // HLD
u_handler:
    dw #0           // HANDLER
u_context:
    dw :__last_nfa  // CONTEXT pointer
    dw #0           // 8 entries in the vocabulary stack
    dw #0           // originaly defined through VOCSS
    dw #0
    dw #0
    dw #0
    dw #0
    dw #0
    dw #0           // always 0 to mark the last entry
u_current:
    dw #0           // CURRENT pointer
    dw #0           // vocabulary link pointer
u_ctop:
    dw :__last_end  // CP (next available location in code dict)
    // NP is not used in this implementation of eForth
    // DW	NTOP			;NP
u_lastn:
    dw :__last_cfa  // LAST
ulast:
end
