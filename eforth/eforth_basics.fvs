// -----------------------------------------------------------
// macros
macro NEXT()
    mov %wp, [%ip++]
    jmp %wp
end

macro __DEFCODE_CFA()
end

macro __DEFASM_COLON_CFA()
    call :doLIST
end

macro __DEFCOLON_CFA()
    call :doLIST
end

macro __DEFVARIABLE_CFA()
    dw :dovar_cfa
end

macro __DEFUSERVAR_CFA()
    dw :douser_cfa
end

macro USER_OFFSET(bla)
    dw @bla - :uzero
end

macro COUNTED_WORD(s)
    db :'string_end - :'string_start
'string_start:
    db @s
'string_end:
end


// dsp always points to the TOS
macro PUSHD(reg)
    mov [--%dsp], @reg
end

macro POPD(reg)
    mov @reg, [%dsp++]
end

macro PUSHR(reg)
    mov [%rsp++], @reg
end

macro POPR(reg)
    mov @reg, [--%rsp]
end

// -----------------------------------------------------------
// constants

    // Setup the memory layout
    // +------------+------------+--------------+----------------+-------------+
    // | Dictionary | Data Stack | Return Stack | User Variables | I/O Buffers |
    // +------------+------------+--------------+----------------+-------------+
    //  16k           4k           4k             4k               4k
    //   -->                  <--           <--

const RSP_BASE = 0x6000     // (16+4+4) * 1024
const DSP_BASE = 0x5000     // (16+4) * 1024
const TIBB = 0x3000

// flags
const COMPILE_ONLY = 0x40
const IMMEDIATE = 0x80

// -----------------------------------------------------------
// startup code

codeblock
    mov %acc1, RSP_BASE
    mov %rsp, %acc1
    mov %acc1, DSP_BASE
    mov %dsp, %acc1

    mov %acc1, :start_word
    mov %ip, %acc1
    NEXT()

uzero:
u_sp0:
    dw DSP_BASE     // SP0
u_rp0:
    dw RSP_BASE     // RP0
u_qkey:
    dw :qrx_cfa     // '?KEY
u_temit:
    dw :txsto_cfa   // 'EMIT
u_texpect:
    dw :accept_cfa  // 'EXPECT
    dw :ktap_cfa    // 'TAP
    // DW	KTAP			;'TAP
    // DW	TXSTO			;'ECHO
    // DW	DOTOK			;'PROMPT
    // DW	BASEE			;BASE
u_temp:
    dw #0           // tmp
u_span:
    dw #0           // SPAN
u_toin:
    dw #0           // >IN
u_htib:
    dw #0           // #TIB
    dw TIBB			// TIB
    // DW	0			;CSP
    // DW	INTER			;'EVAL
    // DW	NUMBQ			;'NUMBER
u_hld:
    dw #0           // HLD
u_handler:
    dw #0           // HANDLER
    // DW	0			;CONTEXT pointer
    // DW	VOCSS DUP (0)		;vocabulary stack
    // DW	0			;CURRENT pointer
    // DW	0			;vocabulary link pointer
u_ctop:
    dw :testw_end   // CP
    // DW	NTOP			;NP
    // DW	LASTN			;LAST
ulast:
end
