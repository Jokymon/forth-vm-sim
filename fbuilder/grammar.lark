start: definition*

definition: code_block
    | code_definition
    | macro_definition
    | word_definition
    | constant_definition

code_block: "codeblock" code_line* "end"

code_definition: "defcode" IDENTIFIER code_line* "end"

macro_definition: "macro" IDENTIFIER code_line* "end"

word_definition: "defword" IDENTIFIER word* "end"

constant_definition: "const" IDENTIFIER "=" number

code_line: instruction
    | macro_call

instruction: OPCODE ( "." SIZESUFFIX )? [ paramlist ]

paramlist: param ( "," param )*

param: register
    | immediate_number
    | register_indirect

macro_call: "$" IDENTIFIER "(" ")"

word: WORD_NAME

register: REGISTER

immediate_number: "#" number | IDENTIFIER

number: ( DEC_NUMBER | HEX_NUMBER )

register_indirect: register_plain_indirect
    | register_indirect_prefix
    | register_indirect_postfix
    
register_plain_indirect: "[" REGISTER "]"
register_indirect_prefix: "[" decrement_increment REGISTER "]"
register_indirect_postfix: "[" REGISTER decrement_increment "]"

decrement_increment: UNARY_OPERATION

OPCODE: "add"
    | "ifkt"
    | "illegal"
    | "inc_wp"
    | "jmp"
    | "mov"
    | "movr"
    | "movs"
    | "nop"
    | "popd"
    | "popr"
    | "pushd"
    | "pushr"

REGISTER: "%ip"
    | "%wp"
    | "%rsp"
    | "%dsp"
    | "%acc1"
    | "%acc2"
    | "%pc"

UNARY_OPERATION: "++" | "--"

WORD_NAME: /[\x21-\x7E]+/i
IDENTIFIER: /[a-zA-Z0-9_]+/
SIZESUFFIX: /[bw]/i
DEC_NUMBER: /\d+/
HEX_NUMBER: /0x[\da-f]*/i

%import common.NEWLINE
COMMENT: "//" /(.)+/ NEWLINE
%ignore COMMENT

%import common.LETTER
%import common.WS
%ignore WS